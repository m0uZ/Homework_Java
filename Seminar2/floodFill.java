// Изображение представлено m x n целочисленной сеткой image, где image[i][j] представляет значение пикселя изображения.
// Вам также будут даны три целых sr числа , sc, и color. Вы должны выполнить заливку заливкой на изображении, начиная с пикселя image[sr][sc].
// Чтобы выполнить заливку заливкой, рассмотрим начальный пиксель, плюс любые пиксели, 
// соединенные в 4 направлениях с начальным пикселем того же цвета, что и начальный пиксель, 
// плюс любые пиксели, соединенные в 4 направлениях с этими пикселями (также с тем же цветом), 
// и так далее. Замените цвет всех вышеупомянутых пикселей на color.
// Верните измененное изображение после выполнения заливки заливкой.
// Ввод: изображение = [[1,1,1],[1,1,0],[1,0,1]], sr = 1, sc = 1, color = 2
// Вывод: [[2,2,2],[2,2,0],[2,0,1]]
// Пояснение: От центра изображения с положением (sr, sc) = (1, 1) (т. Е. Красный пиксель) все пиксели, 
// соединенные контуром того же цвета, что и начальный пиксель (т. Е. Синие пиксели), окрашиваются новым цветом.
// Обратите внимание, что нижний угол не окрашен в 2 цвета, потому что он не связан с начальным пикселем в 4 направлениях.

package Seminar2;

import java.util.Arrays;

public class floodFill {

    public static void main(String[] args) {

        int[][] image = { { 1, 1, 1 },
                { 1, 1, 0 },
                { 1, 0, 1 } };
        int sr = 1, sc = 1, color = 2;
        if (color != image[sr][sc]) {
            dfs(sr, sc, color, image[sr][sc], image);
        }

        System.out.println(Arrays.deepToString(image));
    }

    public static void dfs(int sr, int sc, int color, int color1, int[][] image) {

        if (sr < 0 || sr >= image.length || sc < 0 || sc >= image[0].length || image[sr][sc] != color1) {
            return;
        }
        if (image[sr][sc] == color1) {
            image[sr][sc] = color;

            dfs(sr - 1, sc, color, color1, image);
            dfs(sr + 1, sc, color, color1, image);
            dfs(sr, sc - 1, color, color1, image);
            dfs(sr, sc + 1, color, color1, image);

        }
    }
}